apiVersion: v1
kind: PersistentVolume
metadata:
  name: postgres-volume
  labels:
    type: local
    app: postgres
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /mnt/host/g/postgresdata

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  labels:
    app: postgres
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: 'postgres:15'
          ports:
            - containerPort: 5432
          env:
          - name: PGDATA
            value: /var/lib/postgresql/data/pgdata
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: POSTGRES_USER
                optional: false
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: POSTGRES_PASSWORD
                optional: false
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: POSTGRES_DB
                optional: false
          volumeMounts:
            - mountPath: /var/lib/postgresql/data/pgdata
              name: postgresdata
          resources:
            limits:
              memory: "512Mi"
              cpu: "500m"
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-volume-claim

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - port: 5432
  selector:
    app: postgres